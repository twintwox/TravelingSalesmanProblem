/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package TSP.GUI;

import TSP.ApplicationManager;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JCheckBox;
import javax.swing.JFormattedTextField;
import javax.swing.JList;
import javax.swing.ListModel;

/**
 *
 * @author twintwox
 */
public class GUI extends javax.swing.JFrame {
    public  TSPCanvas[] CANVAS;
    private final DefaultListModel history = new DefaultListModel();

      
    public GUI() {
        super("Traveling Salesman Problem, Martin Zanotti Nleg:10948/5");
        initComponents();
        loadCanvas();
        setVisible(true);
    }
    
    private class ExecutionInstance{
            String method;
            int threads;
            double time;
            double solution;
            ArrayList<City> cities;

            public ExecutionInstance(String method, int threads, double elapsedTime,double solutionLength, ArrayList<City> cities) {
                this.method= method;
                this.threads= threads;
                this.time=elapsedTime;
                this.solution=solutionLength;
                this.cities= new ArrayList(cities);
            }
            @Override
            public String toString() {
                String[] m=method.split(" ");
                String str= m[0].substring(0,1)+m[1].substring(0,1);
                return str+", "+cities.size()+"n, "+threads+"t, "+solution+"km, "+time+" sec.";
            }
    }
    
    public void addToHistory(String method, int threads,double elapsedTime, double solutionLength, ArrayList<City> cities) {
       history.addElement(new ExecutionInstance(method,threads,elapsedTime,solutionLength,cities));
    }

    
    public void setCities(int value){
        cities.setText(value+"");
    }
    public int getThreads(){
        return Integer.parseInt(threads.getText());
    }
    public void setThreads(int val){
        threads.setText(val+"");
    }
    public double getAlpha(){
        return Double.parseDouble(alpha.getText());
    }

    public double getBeta() {
        return Double.parseDouble(beta.getText());
    }

    public double getGlobalEvaporation() {
        return Double.parseDouble(globalEvaporation.getText());
    }

    public int getIterations() {
        return Integer.parseInt(iterations.getText());
    }
    public int getRepetitions() {
        return Integer.parseInt(repetitions.getText());
    }

    public int getAnts() {
        return Integer.parseInt(ants.getText());
    }
    
    public String getMethod(){
        return (String) method.getSelectedItem();
    }
    public boolean getOpt2(){
        return opt2.isSelected();
    }
    
    public boolean getOpt3(){
        return opt3.isSelected();
    }
    
    public  ListModel getHistory(){
        return history;
    }

    public void resetButtons(){
        buttonStart.setEnabled(true);
        buttonClear.setEnabled(true);
        buttonStop.setEnabled(false);
        
    }

    public void loadCanvas(){
        //Loading canvas:
        CANVAS = new TSPCanvas[5];
        CANVAS[0]= new CityCanvas();
        CANVAS[1]= new BestPathCanvas();
        CANVAS[2]= new DistanceCanvas();
        CANVAS[3]= new PathCanvas();
        CANVAS[4]= new TSPCanvas();
        for (int i = 0; i < CANVAS.length; i++) {
            CANVAS[i].setBounds(0, 0, 1400, 1400);
            jLayeredPane2.add(CANVAS[i],i+2);
        }
        CANVAS[CANVAS.length-1].setBackground(Color.WHITE);
        CANVAS[CANVAS.length-1].setOpaque(true);
    };

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        historyList = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        buttonClear = new javax.swing.JButton();
        buttonStart = new javax.swing.JButton();
        buttonStop = new javax.swing.JButton();
        method = new javax.swing.JComboBox();
        cores = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        chkPanel = new javax.swing.JPanel();
        lDistances = new javax.swing.JCheckBox();
        lPaths = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        cities = new javax.swing.JTextField();
        lCities = new javax.swing.JCheckBox();
        lBest = new javax.swing.JCheckBox();
        jLabel10 = new javax.swing.JLabel();
        clearHistoryBtn = new javax.swing.JButton();
        globalEvaporation = new javax.swing.JFormattedTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        alpha = new javax.swing.JFormattedTextField();
        jLabel13 = new javax.swing.JLabel();
        beta = new javax.swing.JFormattedTextField();
        jLabel14 = new javax.swing.JLabel();
        iterations = new javax.swing.JFormattedTextField();
        jLabel15 = new javax.swing.JLabel();
        repetitions = new javax.swing.JFormattedTextField();
        threads = new javax.swing.JFormattedTextField();
        jLabel16 = new javax.swing.JLabel();
        ants = new javax.swing.JFormattedTextField();
        opt2 = new javax.swing.JCheckBox();
        opt3 = new javax.swing.JCheckBox();
        jLayeredPane2 = new javax.swing.JLayeredPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setName(""); // NOI18N
        jPanel2.setPreferredSize(new java.awt.Dimension(273, 564));

        historyList.setModel(getHistory());
        historyList.setToolTipText("");
        historyList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                historyListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(historyList);

        jLabel1.setText("History:");

        jLabel2.setText("Actions:");

        jLabel3.setText("Options:");

        buttonClear.setText("Clear");
        buttonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonClearActionPerformed(evt);
            }
        });

        buttonStart.setText("Start");
        buttonStart.setToolTipText("");
        buttonStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonStartActionPerformed(evt);
            }
        });

        buttonStop.setText("Stop");
        buttonStop.setToolTipText("");
        buttonStop.setEnabled(false);
        buttonStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonStopActionPerformed(evt);
            }
        });

        method.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Brute Force", "Ant System" }));

        cores.setText(Runtime.getRuntime().availableProcessors()+"");
        cores.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLabel5.setText("Cores:");

        jLabel6.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLabel6.setText("Ants:");

        jLabel7.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLabel7.setText("Threads:");

        jLabel8.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLabel8.setText("Method:");

        jLabel9.setText("Show layers:");

        lDistances.setSelected(true);
        lDistances.setText("Distances");
        lDistances.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lDistancesActionPerformed(evt);
            }
        });

        lPaths.setSelected(true);
        lPaths.setText("Paths");
        lPaths.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lPathsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout chkPanelLayout = new javax.swing.GroupLayout(chkPanel);
        chkPanel.setLayout(chkPanelLayout);
        chkPanelLayout.setHorizontalGroup(
            chkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chkPanelLayout.createSequentialGroup()
                .addGroup(chkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lPaths)
                    .addComponent(lDistances))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        chkPanelLayout.setVerticalGroup(
            chkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chkPanelLayout.createSequentialGroup()
                .addComponent(lDistances)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lPaths)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jLabel4.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLabel4.setText("Cities:");

        cities.setText("0");
        cities.setToolTipText("");
        cities.setEnabled(false);

        lCities.setSelected(true);
        lCities.setText("Cities");
        lCities.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lCitiesActionPerformed(evt);
            }
        });

        lBest.setSelected(true);
        lBest.setText("Best");
        lBest.setToolTipText("");
        lBest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lBestActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        jLabel10.setText("Method, Nodes, Threads, Solution, Time");

        clearHistoryBtn.setText("Clear");
        clearHistoryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearHistoryBtnActionPerformed(evt);
            }
        });

        globalEvaporation.setText("0.5");
        globalEvaporation.setToolTipText("");
        globalEvaporation.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                parseDouble(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLabel11.setText("Global Ev.");

        jLabel12.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLabel12.setText("Alpha:");
        jLabel12.setToolTipText("");

        alpha.setText("1.0");
        alpha.setToolTipText("");
        alpha.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                parseDouble(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLabel13.setText("Beta:");

        beta.setText("3.0");
        beta.setToolTipText("");
        beta.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                parseDouble(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLabel14.setText("Iterac.");

        iterations.setText("100");
        iterations.setToolTipText("");
        iterations.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                parseInt(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLabel15.setText("Repet.");

        repetitions.setText("100");
        repetitions.setToolTipText("");
        repetitions.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                parseInt(evt);
            }
        });

        threads.setText("1");
        threads.setToolTipText("");
        threads.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                threadsPropertyChange(evt);
            }
        });

        jLabel16.setText("Ants Configuration:");

        ants.setText("1");
        ants.setToolTipText("");
        ants.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                parseInt(evt);
            }
        });

        opt2.setSelected(true);
        opt2.setText("use Opt2");
        opt2.setToolTipText("");

        opt3.setSelected(true);
        opt3.setText("use Opt3");
        opt3.setToolTipText("");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lBest)
                            .addComponent(lCities))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chkPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(ants, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(globalEvaporation, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(repetitions, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(beta, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(16, 16, 16))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(alpha, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                                    .addGap(2, 2, 2)
                                                    .addComponent(jLabel8))
                                                .addComponent(jLabel7))
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel4))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(cores)
                                                .addComponent(method, 0, 171, Short.MAX_VALUE)
                                                .addComponent(cities, javax.swing.GroupLayout.Alignment.LEADING))
                                            .addComponent(threads, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(iterations, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(12, 12, 12))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(clearHistoryBtn))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel1)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(buttonClear)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(buttonStart)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(buttonStop)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(opt2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(opt3))
                            .addComponent(jLabel16))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonClear)
                    .addComponent(buttonStart)
                    .addComponent(buttonStop))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(method, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cities, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(threads, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel11)
                    .addComponent(globalEvaporation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ants, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(alpha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(beta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(iterations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(repetitions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel15))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(opt2)
                    .addComponent(opt3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(2, 2, 2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(clearHistoryBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lCities)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lBest))
                    .addComponent(chkPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jLayeredPane2Layout = new javax.swing.GroupLayout(jLayeredPane2);
        jLayeredPane2.setLayout(jLayeredPane2Layout);
        jLayeredPane2Layout.setHorizontalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 591, Short.MAX_VALUE)
        );
        jLayeredPane2Layout.setVerticalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLayeredPane2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane2)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 693, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void threadsPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_threadsPropertyChange

        if(evt.getPropertyName().compareTo("value")==0){
            int val;
            try{
                val= Integer.parseInt(threads.getText() != null ? threads.getText() : "1");
            }catch(NumberFormatException e){
                val=1;
            }
            if(val<1)val=1;
            this.setThreads(val);
        }
    }//GEN-LAST:event_threadsPropertyChange

    private void clearHistoryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearHistoryBtnActionPerformed
        history.removeAllElements();
    }//GEN-LAST:event_clearHistoryBtnActionPerformed

    private void lBestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lBestActionPerformed
        Boolean value = ((JCheckBox)evt.getSource()).isSelected();
        CANVAS[1].setVisible(value);
    }//GEN-LAST:event_lBestActionPerformed

    private void lCitiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lCitiesActionPerformed
        Boolean value = ((JCheckBox)evt.getSource()).isSelected();
        CANVAS[0].setVisible(value);
    }//GEN-LAST:event_lCitiesActionPerformed

    private void lPathsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lPathsActionPerformed
        Boolean value = ((JCheckBox)evt.getSource()).isSelected();
        CANVAS[3].setVisible(value);
    }//GEN-LAST:event_lPathsActionPerformed

    private void lDistancesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lDistancesActionPerformed
        Boolean value = ((JCheckBox)evt.getSource()).isSelected();
        CANVAS[2].setVisible(value);
    }//GEN-LAST:event_lDistancesActionPerformed

    private void buttonStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonStopActionPerformed
        buttonStart.setEnabled(true);
        buttonClear.setEnabled(true);
        buttonStop.setEnabled(false);
        ApplicationManager.setState(ApplicationManager.ST_STOPPING);
        ApplicationManager.perform();
    }//GEN-LAST:event_buttonStopActionPerformed

    private void buttonStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonStartActionPerformed

        buttonStart.setEnabled(false);
        buttonClear.setEnabled(false);
        buttonStop.setEnabled(true);
        ApplicationManager.setState(ApplicationManager.ST_RUNNING);
        ApplicationManager.perform();
    }//GEN-LAST:event_buttonStartActionPerformed

    private void buttonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonClearActionPerformed
        TSPCanvas canvas = CANVAS[0];
        canvas.removeAll();
        canvas.getHeight();
        canvas.getGraphics().clearRect(0, 0, canvas.getWidth(), canvas.getHeight());
        canvas.repaint();
        ApplicationManager.setState(ApplicationManager.ST_INIT);
        ApplicationManager.perform();
    }//GEN-LAST:event_buttonClearActionPerformed

    private void historyListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_historyListValueChanged
        JList l = ((JList)evt.getSource());
        ExecutionInstance inst = (ExecutionInstance)l.getModel().getElementAt(l.getSelectedIndex());
        TSPCanvas canvas = CANVAS[0];
        canvas.removeAll();
        canvas.getHeight();
        canvas.getGraphics().clearRect(0, 0, canvas.getWidth(), canvas.getHeight());

        ApplicationManager.setState(ApplicationManager.ST_INIT);
        ApplicationManager.perform();

        //ApplicationManager.clear();
        for(City c: inst.cities){
            ((CityCanvas)canvas).addCity(c);
        }
        canvas.repaint();
    }//GEN-LAST:event_historyListValueChanged

    private void parseDouble(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_parseDouble
          if(evt.getPropertyName().compareTo("value")==0){
            double val;
            JFormattedTextField el= ((JFormattedTextField) evt.getSource());
            try{
                val= Double.parseDouble( el.getText() != null ? el.getText() : "1.0");
            }catch(NumberFormatException e){
                val=1.0;
            }
            if(val<0.0)val=0.0;
            el.setText(val+"");
        }
    }//GEN-LAST:event_parseDouble

    private void parseInt(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_parseInt
        if(evt.getPropertyName().compareTo("value")==0){
            int val;
            JFormattedTextField el= ((JFormattedTextField) evt.getSource());
            try{
                val= Integer.parseInt( el.getText() != null ? el.getText() : "1");
            }catch(NumberFormatException e){
                val=1;
            }
            if(val<1)val=1;
            el.setText(val+"");
        }
    }//GEN-LAST:event_parseInt
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField alpha;
    private javax.swing.JFormattedTextField ants;
    private javax.swing.JFormattedTextField beta;
    private javax.swing.JButton buttonClear;
    private javax.swing.JButton buttonStart;
    private javax.swing.JButton buttonStop;
    private javax.swing.JPanel chkPanel;
    private javax.swing.JTextField cities;
    private javax.swing.JButton clearHistoryBtn;
    private javax.swing.JTextField cores;
    private javax.swing.JFormattedTextField globalEvaporation;
    private javax.swing.JList historyList;
    private javax.swing.JFormattedTextField iterations;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JCheckBox lBest;
    private javax.swing.JCheckBox lCities;
    private javax.swing.JCheckBox lDistances;
    private javax.swing.JCheckBox lPaths;
    private javax.swing.JComboBox method;
    private javax.swing.JCheckBox opt2;
    private javax.swing.JCheckBox opt3;
    private javax.swing.JFormattedTextField repetitions;
    private javax.swing.JFormattedTextField threads;
    // End of variables declaration//GEN-END:variables
}
